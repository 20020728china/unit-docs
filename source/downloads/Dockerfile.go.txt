# keep our base image as small as possible
FROM nginx/unit:1.11.0-minimal

# port used by the listener in config.json
EXPOSE 8080

# add Go language and corresponding language module (for build only)
RUN apt update                                                             \
    && apt install -y apt-transport-https gnupg1                           \
    && curl https://nginx.org/keys/nginx_signing.key | apt-key add -       \
    && echo "deb https://packages.nginx.org/unit/debian/ stretch unit"     \
         > /etc/apt/sources.list.d/unit.list                               \
    && echo "deb-src https://packages.nginx.org/unit/debian/ stretch unit" \
         >> /etc/apt/sources.list.d/unit.list                              \
    && apt update                                                          \
    && apt install -y unit-go1.8                                           \
# final cleanup
    && apt remove -y apt-transport-https gnupg1                            \
    && apt autoremove --purge -y                                           \
    && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/*.list

# application setup
RUN mkdir /www/ && echo '                                                  \
    package main;                                                          \
    import (                                                               \
        "io";                                                              \
        "net/http";                                                        \
        "nginx/unit"                                                       \
    );                                                                     \
    func main() {                                                          \
        http.HandleFunc("/",func (w http.ResponseWriter, r *http.Request) {\
            io.WriteString(w, "Hello, Unit!")                              \
        });                                                                \
        unit.ListenAndServe(":8080", nil)                                  \
    }                                                                      \
    ' > /www/app.go                                                        \
# make nginx/unit package available at $GOPATH to compile the app
    && cp -r /usr/share/gocode/src/* /usr/lib/go-1.8/src/                  \
    && /usr/lib/go-1.8/bin/go build -o /www/app /www/app.go                \
# launch Unit
    && unitd --control unix:/var/run/control.unit.sock                     \
# upload the app config to Unit
    && curl -X PUT --data-binary '{                                        \
    "listeners": {                                                         \
        "*:8080": {                                                        \
            "pass": "applications/go_app"                                  \
        }                                                                  \
    },                                                                     \
    "applications": {                                                      \
        "go_app": {                                                        \
            "type": "external",                                            \
            "working_directory": "/www/",                                  \
            "executable": "/www/app"                                       \
        }                                                                  \
    }                                                                      \
    }' --unix-socket /var/run/control.unit.sock http://localhost/config/   \
# final cleanup (unit-go not needed to run the app, only to build it)
    && apt remove -y unit-go1.8                                            \
    && apt autoremove --purge -y && rm /www/app.go
